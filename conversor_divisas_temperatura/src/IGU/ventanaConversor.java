/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package IGU;

import LOGIC.JcomboBoxRender;
import java.awt.geom.RoundRectangle2D;
import java.util.Hashtable;
import javax.swing.ImageIcon;

/**
 *
 * @author LpaqP
 */
public class ventanaConversor extends javax.swing.JFrame {

    /**
     * Creates new form ventanaConversor
     */
     Hashtable<Object,ImageIcon>miElemento;
     int width=40;
     int height =40;
     
     private String dollarc1="/img/american.png";
     private String euroc1="/img/euro.png";
     private String librac1="/img/libra.jpg";
     private String wonc1="/img/won.png";
     private String yenc1="/img/yen.png";
     private String elsalvador="/img/el_salvador.png";
    
     
    public ventanaConversor() {
        miElemento= new Hashtable<>();
         setUndecorated(true);
        initComponents();
         initCombo();
         initComboTemperaturas();
         
        setLocationRelativeTo(null);
     setShape(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 20, 20));
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipalCentro = new javax.swing.JPanel();
        panelSuperior = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        PaneLInferior = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        panelCentral = new javax.swing.JPanel();
        panelContenido = new javax.swing.JPanel();
        cbDivisasInferior = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cbDivisasSuperior = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        JCBTemperaturaSuperior = new javax.swing.JComboBox<>();
        JCBTemperaturaInferior = new javax.swing.JComboBox<>();
        JLBResultadoTemperatura = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        JTFieldTemperatura = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        JTfieldImporte = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        JButtonConvertir = new javax.swing.JButton();
        JLabelRespuesta = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipalCentro.setBackground(new java.awt.Color(204, 204, 255));
        panelPrincipalCentro.setLayout(new java.awt.BorderLayout());

        panelSuperior.setBackground(new java.awt.Color(29, 93, 155));
        panelSuperior.setPreferredSize(new java.awt.Dimension(400, 60));

        closeButton.setBackground(new java.awt.Color(219, 218, 218));
        closeButton.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        closeButton.setText("x");
        closeButton.setBorder(null);
        closeButton.setFocusable(false);
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Conversor de Divisas");

        javax.swing.GroupLayout panelSuperiorLayout = new javax.swing.GroupLayout(panelSuperior);
        panelSuperior.setLayout(panelSuperiorLayout);
        panelSuperiorLayout.setHorizontalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSuperiorLayout.createSequentialGroup()
                .addContainerGap(324, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(204, 204, 204)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        panelSuperiorLayout.setVerticalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        panelPrincipalCentro.add(panelSuperior, java.awt.BorderLayout.PAGE_START);

        PaneLInferior.setBackground(new java.awt.Color(29, 93, 155));
        PaneLInferior.setPreferredSize(new java.awt.Dimension(400, 60));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Allura Challenge Backend");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Autor: Walter-ADuran");

        javax.swing.GroupLayout PaneLInferiorLayout = new javax.swing.GroupLayout(PaneLInferior);
        PaneLInferior.setLayout(PaneLInferiorLayout);
        PaneLInferiorLayout.setHorizontalGroup(
            PaneLInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaneLInferiorLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(261, Short.MAX_VALUE))
        );
        PaneLInferiorLayout.setVerticalGroup(
            PaneLInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaneLInferiorLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(PaneLInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(jLabel5)))
        );

        panelPrincipalCentro.add(PaneLInferior, java.awt.BorderLayout.PAGE_END);

        panelCentral.setBackground(new java.awt.Color(231, 229, 229));

        cbDivisasInferior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDivisasInferiorActionPerformed(evt);
            }
        });

        jLabel1.setText("Importe:");

        cbDivisasSuperior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDivisasSuperiorActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel7.setText("Conversor de Temperaturas");

        JLBResultadoTemperatura.setBackground(new java.awt.Color(255, 102, 102));

        jButton1.setBackground(new java.awt.Color(29, 93, 155));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Convertir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Temperatura inicial:");

        jLabel10.setText("A:");

        jLabel11.setText("Valor Convertido:");

        jLabel12.setText("De:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(JLBResultadoTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(215, 215, 215))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(JTFieldTemperatura)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JCBTemperaturaSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(64, 64, 64)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JCBTemperaturaInferior, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel9))
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(JCBTemperaturaInferior, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(JTFieldTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(JCBTemperaturaSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLBResultadoTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        JTfieldImporte.setBorder(null);
        JTfieldImporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTfieldImporteActionPerformed(evt);
            }
        });

        jLabel2.setText("De:");

        jLabel3.setText("A:");

        jLabel8.setText("Valor Convertido:");

        JButtonConvertir.setBackground(new java.awt.Color(29, 93, 155));
        JButtonConvertir.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        JButtonConvertir.setForeground(new java.awt.Color(255, 255, 255));
        JButtonConvertir.setText("Convertir");
        JButtonConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonConvertirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelContenidoLayout = new javax.swing.GroupLayout(panelContenido);
        panelContenido.setLayout(panelContenidoLayout);
        panelContenidoLayout.setHorizontalGroup(
            panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenidoLayout.createSequentialGroup()
                .addGap(336, 336, 336)
                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cbDivisasSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 366, Short.MAX_VALUE))
            .addGroup(panelContenidoLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelContenidoLayout.createSequentialGroup()
                        .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JTfieldImporte)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addComponent(JLabelRespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(JButtonConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbDivisasInferior, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelContenidoLayout.setVerticalGroup(
            panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenidoLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelContenidoLayout.createSequentialGroup()
                        .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JTfieldImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbDivisasSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbDivisasInferior, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(JLabelRespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(JButtonConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout panelCentralLayout = new javax.swing.GroupLayout(panelCentral);
        panelCentral.setLayout(panelCentralLayout);
        panelCentralLayout.setHorizontalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCentralLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelContenido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        panelCentralLayout.setVerticalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContenido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panelPrincipalCentro.add(panelCentral, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelPrincipalCentro, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbDivisasSuperiorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDivisasSuperiorActionPerformed
        
        
    }//GEN-LAST:event_cbDivisasSuperiorActionPerformed

    private void JTfieldImporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTfieldImporteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTfieldImporteActionPerformed

    private void cbDivisasInferiorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDivisasInferiorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDivisasInferiorActionPerformed

    private void JButtonConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonConvertirActionPerformed
       
        
        if (JTfieldImporte.getText().isEmpty()) {
            JLabelRespuesta.setText("No se ha ingresado ningun valor");
            return;
        }
        
    double conversion = 0;
   
   

        try {
         double importe = Double.parseDouble(JTfieldImporte.getText());        
         String monedaSuperior = (String) cbDivisasSuperior.getSelectedItem();
         String monedaInferior = (String) cbDivisasInferior.getSelectedItem();   
             
         if (monedaSuperior.equals(monedaInferior)) {
            // Manejar el caso de selección de la misma moneda en ambos JComboBox
            JLabelRespuesta.setText("Resultado: La misma moneda");
            return;
        }
            switch (monedaSuperior) {
                case "dollar":
                    switch (monedaInferior) {
                        case "euro":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.90477391/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "libra":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.77536799/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "won":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(1274.3733/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "yen":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(140.92693/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                            case "el salvador":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(1 /1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                    }
                    break;
                    case "euro":
                        switch (monedaInferior) {
                        case "dollar":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(1.1051438/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "libra":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.85696516/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "won":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(1408.599/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "yen":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(155.76547 /1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                            case "el salvador":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(1.1051438/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                    }
                        break;
                    case "libra":
                         switch (monedaInferior) {
                        case "dollar":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(1.2895756/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "euro":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(1.1669435/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "won":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(1643.5119/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "yen":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(181.74427 /1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                            case "el salvador":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(1.2895756/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                    }
                    case "won":
                         switch (monedaInferior) {
                        case "dollar":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.0007846289/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "euro":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.00071001365/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "libra":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.00060843212/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "yen":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.11057256/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                            case "el salvador":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.0007846289/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                    }
                        break;
                    case "yen":
                        switch (monedaInferior) {
                        case "dollar":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.0070951919/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "euro":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.0064207978/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "won":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(9.0434221/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "libra":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.0055022958 /1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                            case "el salvador":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.0070951919/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                    }
                        break;
                    case "el salvador":
                        switch (monedaInferior) {
                        case "euro":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.90477391/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "libra":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(0.77536799/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "won":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(1274.3733/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break;
                            case "yen":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(140.92693/1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                            case "dollar":
                           conversion=Double.parseDouble(JTfieldImporte.getText())*(1 /1);
                            JLabelRespuesta.setText(Double.toString(conversion)+" "+monedaInferior);
                            break; 
                    }
                        break;
                default:
                    throw new AssertionError();
            }
        } catch (Exception e) {
            JLabelRespuesta.setText("Has ingresado un valor no valido");
        }
       
      
    }//GEN-LAST:event_JButtonConvertirActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
        System.exit(0); // Detiene el proceso de la aplicación
    }//GEN-LAST:event_closeButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       
          
        if (JTFieldTemperatura.getText().isEmpty()) {
            JLBResultadoTemperatura.setText("No se ha ingresado ningun valor");
            return;
        }
         
         double convertir=0;
        try{
           
         double temperatura = Double.parseDouble(JTFieldTemperatura.getText());        
         String temperaturaInicial = (String) JCBTemperaturaSuperior.getSelectedItem();
         String temperaturaConvertida = (String) JCBTemperaturaInferior.getSelectedItem();  
         
              if (temperaturaInicial.equals(temperaturaConvertida)) {
            // Manejar el caso de selección de la misma moneda en ambos JComboBox
            JLBResultadoTemperatura.setText("Resultado: La misma temperatura");
            return;
        }
            switch(temperaturaInicial)
            {
                case "Grados Celcius":
                 
                    switch(temperaturaConvertida)
                    {
                        case "Grados Fahrenheit":
                               
                            convertir=(9)*(Double.parseDouble(JTFieldTemperatura.getText())/5)+32;
                             convertir= Math.round(convertir * 10000.0) / 10000.0;
                            JLBResultadoTemperatura.setText(Double.toString(convertir)+" "+temperaturaConvertida);
                            
                            break;
                            
                           case "Grados Kelvin":
                               
                            convertir=Double.parseDouble(JTFieldTemperatura.getText())+273.15;
                             convertir= Math.round(convertir * 10000.0) / 10000.0;
                            JLBResultadoTemperatura.setText(Double.toString(convertir)+" "+temperaturaConvertida);
                            
                            break;
                           
                    
                    }
                break;    
            
                case "Grados Fahrenheit":
                    switch(temperaturaConvertida)
                    {
                        case "Grados Celcius":
                               
                            convertir=(5*(Double.parseDouble(JTFieldTemperatura.getText())-32))/9;
                             convertir= Math.round(convertir * 10000.0) / 10000.0;
                            JLBResultadoTemperatura.setText(Double.toString(convertir)+" "+temperaturaConvertida);
                            
                            break;
                            
                           case "Grados Kelvin":
                               
                            convertir=((5*(Double.parseDouble(JTFieldTemperatura.getText())-32))/9)+273.15;
                             convertir= Math.round(convertir * 10000.0) / 10000.0;
                            JLBResultadoTemperatura.setText(Double.toString(convertir)+" "+temperaturaConvertida);
                            
                            break;
                           
                    
                    }
                    break;
                    case "Grados Kelvin":
                     switch(temperaturaConvertida)
                    {
                        case "Grados Celcius":
                               
                            convertir=Double.parseDouble(JTFieldTemperatura.getText())-273.15;
                             convertir= Math.round(convertir * 10000.0) / 10000.0;
                            JLBResultadoTemperatura.setText(Double.toString(convertir)+" "+temperaturaConvertida);
                            
                            break;
                            
                           case "Grados Fahrenheit":
                               
                            convertir=((9*(Double.parseDouble(JTFieldTemperatura.getText())-273.15))/5)+32;
                           convertir= Math.round(convertir * 10000.0) / 10000.0;
                           
                            JLBResultadoTemperatura.setText(Double.toString(convertir)+" "+temperaturaConvertida);
                            
                            break;
                           
                    
                    }
                        break;
            }
        
        }catch(Exception e){
        System.out.println(e.getMessage());
        JLBResultadoTemperatura.setText("Has ingresado un valor no valido");
        }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButtonConvertir;
    private javax.swing.JComboBox<String> JCBTemperaturaInferior;
    private javax.swing.JComboBox<String> JCBTemperaturaSuperior;
    private javax.swing.JLabel JLBResultadoTemperatura;
    private javax.swing.JLabel JLabelRespuesta;
    private javax.swing.JTextField JTFieldTemperatura;
    private javax.swing.JTextField JTfieldImporte;
    private javax.swing.JPanel PaneLInferior;
    private javax.swing.JComboBox<String> cbDivisasInferior;
    private javax.swing.JComboBox<String> cbDivisasSuperior;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelCentral;
    private javax.swing.JPanel panelContenido;
    private javax.swing.JPanel panelPrincipalCentro;
    private javax.swing.JPanel panelSuperior;
    // End of variables declaration//GEN-END:variables
 
    private void initCombo() {
        //cb1
       cbDivisasSuperior.addItem("dollar");
       cbDivisasSuperior.addItem("euro");
       cbDivisasSuperior.addItem("libra");
       cbDivisasSuperior.addItem("won");
       cbDivisasSuperior.addItem("yen");
       cbDivisasSuperior.addItem("el salvador");
       //cb2
       cbDivisasInferior.addItem("dollar");
       cbDivisasInferior.addItem("euro");
       cbDivisasInferior.addItem("libra");
       cbDivisasInferior.addItem("won");
       cbDivisasInferior.addItem("yen");
       cbDivisasInferior.addItem("el salvador");
       //cb1
       miElemento.put("dollar", getIcono(dollarc1));
       miElemento.put("euro",getIcono(euroc1));
       miElemento.put("libra",getIcono(librac1));
       miElemento.put("won", getIcono(wonc1));
       miElemento.put("yen", getIcono(yenc1));
       miElemento.put("el salvador", getIcono(elsalvador));
       
      
     
       
       
       JcomboBoxRender c1Render = new JcomboBoxRender(miElemento);
       cbDivisasSuperior.setRenderer(c1Render);
       
       //cb2
        JcomboBoxRender c2Render = new JcomboBoxRender(miElemento);
       cbDivisasInferior.setRenderer(c2Render);
    }
    
    public ImageIcon getIcono(String path){
        return new ImageIcon (new ImageIcon(getClass().getResource(path)).getImage().getScaledInstance(width,height,java.awt.Image.SCALE_SMOOTH));
    }
   
   private void initComboTemperaturas(){
    JCBTemperaturaSuperior.addItem("Grados Celcius");
    JCBTemperaturaSuperior.addItem("Grados Fahrenheit");
    JCBTemperaturaSuperior.addItem("Grados Kelvin");
    
    JCBTemperaturaInferior.addItem("Grados Celcius");
    JCBTemperaturaInferior.addItem("Grados Fahrenheit");
    JCBTemperaturaInferior.addItem("Grados Kelvin");
    }
   
}
